<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\MM32F3270.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\MM32F3270.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Jul 22 06:08:06 2022
<BR><P>
<H3>Maximum Stack Usage =        488 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
DMA1_Channel3_IRQHandler &rArr; wgs84_to_gcj02 &rArr; transformlat &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[35]">ADC3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1e]">CAN1_RX_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[43]">COMP1_2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from gps.o(i.DMA1_Channel3_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3d]">DMA2_Channel1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3e]">DMA2_Channel2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[40]">DMA2_Channel4_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[41]">DMA2_Channel5_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[42]">ETH_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2e]">EXTI15_10_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1f]">EXTI9_5_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1d]">FlashCache_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[27]">I2C1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[28]">I2C2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[44]">OTG_FS_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[30]">OTG_FS_WKUP_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[f]">RCC_CRS_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2f]">RTCAlarm_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[36]">SDIO_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[29]">SPI1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2a]">SPI2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[38]">SPI3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[49]">SystemInit</a> from system_mm32f327x.o(i.SystemInit) referenced from startup_mm32f327x_keil.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[20]">TIM1_BRK_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[23]">TIM1_CC_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[22]">TIM1_TRG_COM_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[21]">TIM1_UP_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[24]">TIM2_IRQHandler</a> from target.o(i.TIM2_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[25]">TIM3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[26]">TIM4_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[37]">TIM5_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3b]">TIM6_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3c]">TIM7_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[31]">TIM8_BRK_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[34]">TIM8_CC_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[33]">TIM8_TRG_COM_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[32]">TIM8_UP_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2b]">UART1_IRQHandler</a> from target.o(i.UART1_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2c]">UART2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2d]">UART3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[39]">UART4_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3a]">UART5_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[45]">UART6_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[46]">UART7_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[47]">UART8_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[4a]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32f327x_keil.o(.text)
 <LI><a href="#[4b]">fputc</a> from usart.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[48]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(.text)
</UL>
<P><STRONG><a name="[d8]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d9]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[da]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[db]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[dc]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[dd]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>COMP1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FlashCache_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>UART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GNRMC_Analysis
</UL>

<P><STRONG><a name="[4e]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rectangle
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xiangchajiao
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Way_Limite
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs84_to_gcj02
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformlng
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformlat
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_find
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GNRMC_Analysis
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_target
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_Exchange_Way
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Way_Limite
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs84_to_gcj02
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_find
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GNRMC_Analysis
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_target
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_Exchange_Way
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs84_to_gcj02
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_target
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rectangle
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;P_Caculate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I_Caculate
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;D_Caculate
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xiangchajiao
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs84_to_gcj02
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformlng
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformlat
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GNRMC_Analysis
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rectangle
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xiangchajiao
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs84_to_gcj02
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformlng
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformlat
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GNRMC_Analysis
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5983_Read
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GNRMC_Analysis
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GNRMC_Analysis
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[59]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StraightWay
</UL>

<P><STRONG><a name="[de]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StraightWay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_Exchange_Way
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Way_Limite
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_find
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_target
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StraightWay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_Exchange_Way
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Way_Limite
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_find
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[df]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[e0]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[e1]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[e2]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[51]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[c2]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[e4]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[e5]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[e7]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>AutoCalPllFactor</STRONG> (Thumb, 102 bytes, Stack size 28 bytes, system_mm32f327x.o(i.AutoCalPllFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = AutoCalPllFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>

<P><STRONG><a name="[60]"></a>BLUE</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, key.o(i.BLUE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BLUE
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_find
</UL>

<P><STRONG><a name="[8d]"></a>DELAY_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, systick.o(i.DELAY_Init))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
</UL>

<P><STRONG><a name="[7d]"></a>DELAY_Us</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, systick.o(i.DELAY_Us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DELAY_Us
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Wait_Ack
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Stop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Start
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Send_Byte
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Read_Byte
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_NAck
</UL>

<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, gps.o(i.DMA1_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = DMA1_Channel3_IRQHandler &rArr; wgs84_to_gcj02 &rArr; transformlat &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RED
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs84_to_gcj02
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_find
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GNRMC_Analysis
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[64]"></a>DMA_Cmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_DMA_Init
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[62]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[b8]"></a>DMA_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_DMA_Init
</UL>

<P><STRONG><a name="[b6]"></a>DMA_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, hal_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_DMA_Init
</UL>

<P><STRONG><a name="[6b]"></a>D_Caculate</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, pid.o(i.D_Caculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = D_Caculate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
</UL>

<P><STRONG><a name="[6c]"></a>Find_Exchange_Way</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, vector.o(i.Find_Exchange_Way))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Find_Exchange_Way &rArr; Way_Limite &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Way_Limite
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[6f]"></a>Find_target</STRONG> (Thumb, 216 bytes, Stack size 88 bytes, gps.o(i.Find_target))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Find_target &rArr; xiangchajiao &rArr; acos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xiangchajiao
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_find
</UL>

<P><STRONG><a name="[86]"></a>GPIO_Init</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, hal_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_GPIO_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_GPIO_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_GPIO_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_GPIO_Init
</UL>

<P><STRONG><a name="[9b]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, hal_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_GPIO_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_GPIO_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_GPIO_Init
</UL>

<P><STRONG><a name="[7f]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Wait_Ack
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Stop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Start
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Read_Byte
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>

<P><STRONG><a name="[85]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_GPIO_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_GPIO_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_GPIO_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_GPIO_Init
</UL>

<P><STRONG><a name="[61]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Wait_Ack
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Stop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Start
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Send_Byte
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Read_Byte
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_NAck
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RED
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GREEN
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLUE
</UL>

<P><STRONG><a name="[71]"></a>GPS_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gps.o(i.GPS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPS_Init &rArr; GPS_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
</UL>

<P><STRONG><a name="[72]"></a>GPS_Send</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gps.o(i.GPS_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPS_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Init
</UL>

<P><STRONG><a name="[74]"></a>GREEN</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, key.o(i.GREEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GREEN
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_find
</UL>

<P><STRONG><a name="[75]"></a>HMC5983_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hmc5983.o(i.HMC5983_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HMC5983_Init &rArr; I2C_Write_REG &rArr; I2C2_Send_Byte &rArr; DELAY_Us
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_GPIO_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
</UL>

<P><STRONG><a name="[78]"></a>HMC5983_Read</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, hmc5983.o(i.HMC5983_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HMC5983_Read &rArr; rectangle &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5983_Read_reg
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rectangle
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_find
</UL>

<P><STRONG><a name="[79]"></a>HMC5983_Read_reg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, hmc5983.o(i.HMC5983_Read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HMC5983_Read_reg &rArr; I2C_Write_REG &rArr; I2C2_Send_Byte &rArr; DELAY_Us
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write_REG
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Read_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5983_Read
</UL>

<P><STRONG><a name="[7c]"></a>I2C2_NAck</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, iic.o(i.I2C2_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C2_NAck &rArr; DELAY_Us
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Us
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Read_REG
</UL>

<P><STRONG><a name="[7e]"></a>I2C2_Read_Byte</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, iic.o(i.I2C2_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C2_Read_Byte &rArr; DELAY_Us
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Us
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Read_REG
</UL>

<P><STRONG><a name="[7b]"></a>I2C2_Read_REG</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, iic.o(i.I2C2_Read_REG))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C2_Read_REG &rArr; I2C2_Send_Byte &rArr; DELAY_Us
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Wait_Ack
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Stop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Start
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Send_Byte
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Read_Byte
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_NAck
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5983_Read_reg
</UL>

<P><STRONG><a name="[81]"></a>I2C2_Send_Byte</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, iic.o(i.I2C2_Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C2_Send_Byte &rArr; DELAY_Us
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Us
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write_REG
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Read_REG
</UL>

<P><STRONG><a name="[80]"></a>I2C2_Start</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, iic.o(i.I2C2_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C2_Start &rArr; DELAY_Us
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Us
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write_REG
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Read_REG
</UL>

<P><STRONG><a name="[83]"></a>I2C2_Stop</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, iic.o(i.I2C2_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C2_Stop &rArr; DELAY_Us
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Us
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write_REG
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Read_REG
</UL>

<P><STRONG><a name="[82]"></a>I2C2_Wait_Ack</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, iic.o(i.I2C2_Wait_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C2_Wait_Ack &rArr; DELAY_Us
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Us
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write_REG
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Read_REG
</UL>

<P><STRONG><a name="[77]"></a>I2C_Write_REG</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, iic.o(i.I2C_Write_REG))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Write_REG &rArr; I2C2_Send_Byte &rArr; DELAY_Us
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Wait_Ack
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Stop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Start
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5983_Read_reg
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5983_Init
</UL>

<P><STRONG><a name="[76]"></a>IIC_GPIO_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, iic.o(i.IIC_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = IIC_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5983_Init
</UL>

<P><STRONG><a name="[87]"></a>I_Caculate</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, pid.o(i.I_Caculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = I_Caculate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
</UL>

<P><STRONG><a name="[88]"></a>Init_For_All_Device</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, target.o(i.Init_For_All_Device))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Init_For_All_Device &rArr; HMC5983_Read &rArr; rectangle &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5983_Read
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5983_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART4_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_DMA_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>Key_Init</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, key.o(i.Key_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Key_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
</UL>

<P><STRONG><a name="[92]"></a>Key_Scan</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, key.o(i.Key_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Key_Scan &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RED
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLUE
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Loop
</UL>

<P><STRONG><a name="[93]"></a>Main_Loop</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, target.o(i.Main_Loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Main_Loop &rArr; Key_Scan &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>NMEA_Comma_Pos</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, gps.o(i.NMEA_Comma_Pos))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GNRMC_Analysis
</UL>

<P><STRONG><a name="[65]"></a>NMEA_GNRMC_Analysis</STRONG> (Thumb, 590 bytes, Stack size 72 bytes, gps.o(i.NMEA_GNRMC_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = NMEA_GNRMC_Analysis &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Pow
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Comma_Pos
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[97]"></a>NMEA_Pow</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gps.o(i.NMEA_Pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NMEA_Pow
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GNRMC_Analysis
</UL>

<P><STRONG><a name="[96]"></a>NMEA_Str2num</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, gps.o(i.NMEA_Str2num))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = NMEA_Str2num &rArr; NMEA_Pow
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Pow
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GNRMC_Analysis
</UL>

<P><STRONG><a name="[b1]"></a>NVIC_Init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, hal_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_DMA_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
</UL>

<P><STRONG><a name="[b0]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_DMA_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
</UL>

<P><STRONG><a name="[98]"></a>PID</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, pid.o(i.PID))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = PID &rArr; P_Caculate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;P_Caculate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I_Caculate
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;D_Caculate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StraightWay
</UL>

<P><STRONG><a name="[9a]"></a>PWM_GPIO_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, pwm.o(i.PWM_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PWM_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[8b]"></a>PWM_Init</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, pwm.o(i.PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = PWM_Init &rArr; PWM_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
</UL>

<P><STRONG><a name="[99]"></a>P_Caculate</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, pid.o(i.P_Caculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = P_Caculate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
</UL>

<P><STRONG><a name="[84]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_GPIO_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_GPIO_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_GPIO_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_DMA_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_GPIO_Init
</UL>

<P><STRONG><a name="[ae]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART4_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
</UL>

<P><STRONG><a name="[9c]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[a3]"></a>RCC_GetHCLKFreq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, hal_rcc.o(i.RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2Freq
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[a5]"></a>RCC_GetPCLK1Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, hal_rcc.o(i.RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetPCLK1Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[a6]"></a>RCC_GetPCLK2Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, hal_rcc.o(i.RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[a4]"></a>RCC_GetSysClockFreq</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[6a]"></a>RED</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, key.o(i.RED))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RED
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[ab]"></a>StraightWay</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, target.o(i.StraightWay))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = StraightWay &rArr; PID &rArr; P_Caculate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[49]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, system_mm32f327x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(.text)
</UL>
<P><STRONG><a name="[24]"></a>TIM2_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, target.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TIM2_IRQHandler &rArr; HMC5983_Read &rArr; rectangle &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5983_Read
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StraightWay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_Exchange_Way
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>TIM2_Init</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, timer.o(i.TIM2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM2_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
</UL>

<P><STRONG><a name="[a0]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[ad]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[a1]"></a>TIM_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[a2]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[ac]"></a>TIM_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[af]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
</UL>

<P><STRONG><a name="[9e]"></a>TIM_OC1Init</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_OC1Init))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[9f]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[9d]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[b2]"></a>UART1_GPIO_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, usart.o(i.UART1_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART1_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[2b]"></a>UART1_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, target.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART1_IRQHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetITStatus
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearITPendingBit
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>UART3_DMA_Init</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, dma.o(i.UART3_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART3_DMA_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMACmd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
</UL>

<P><STRONG><a name="[b9]"></a>UART3_GPIO_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, usart.o(i.UART3_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART3_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
</UL>

<P><STRONG><a name="[ba]"></a>UART4_GPIO_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, usart.o(i.UART4_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART4_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART4_Init
</UL>

<P><STRONG><a name="[b4]"></a>UART_ClearITPendingBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[bd]"></a>UART_Cmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_uart.o(i.UART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART4_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[b7]"></a>UART_DMACmd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_uart.o(i.UART_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_DMA_Init
</UL>

<P><STRONG><a name="[73]"></a>UART_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_uart.o(i.UART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Send
</UL>

<P><STRONG><a name="[b3]"></a>UART_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_uart.o(i.UART_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[be]"></a>UART_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[bb]"></a>UART_Init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, hal_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_Init &rArr; RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2Freq
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART4_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[b5]"></a>UART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[69]"></a>UART_SendData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_uart.o(i.UART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Send
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[bc]"></a>UART_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_uart.o(i.UART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[89]"></a>USART1_Init</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, usart.o(i.USART1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USART1_Init &rArr; UART_Init &rArr; RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
</UL>

<P><STRONG><a name="[8c]"></a>USART3_Init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, usart.o(i.USART3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART3_Init &rArr; UART_Init &rArr; RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
</UL>

<P><STRONG><a name="[8a]"></a>USART4_Init</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, usart.o(i.USART4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART4_Init &rArr; UART_Init &rArr; RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
</UL>

<P><STRONG><a name="[6d]"></a>Way_Limite</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, vector.o(i.Way_Limite))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Way_Limite &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_Exchange_Way
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_find
</UL>

<P><STRONG><a name="[bf]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e8]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[91]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Loop
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
</UL>

<P><STRONG><a name="[e9]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[ea]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[c6]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[c1]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 828 bytes, Stack size 128 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[c3]"></a>__kernel_cos</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[c4]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[c5]"></a>__kernel_sin</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[c8]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[c9]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[ca]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[c7]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[eb]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ec]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[ed]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[d0]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[cf]"></a>acos</STRONG> (Thumb, 574 bytes, Stack size 40 bytes, acos.o(i.acos))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = acos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xiangchajiao
</UL>

<P><STRONG><a name="[d2]"></a>atan</STRONG> (Thumb, 474 bytes, Stack size 40 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[d3]"></a>atan2</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rectangle
</UL>

<P><STRONG><a name="[d4]"></a>cos</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs84_to_gcj02
</UL>

<P><STRONG><a name="[4b]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[48]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = main &rArr; Init_For_All_Device &rArr; HMC5983_Read &rArr; rectangle &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Loop
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_For_All_Device
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7a]"></a>rectangle</STRONG> (Thumb, 72 bytes, Stack size 56 bytes, hmc5983.o(i.rectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = rectangle &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5983_Read
</UL>

<P><STRONG><a name="[d5]"></a>sin</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs84_to_gcj02
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformlng
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformlat
</UL>

<P><STRONG><a name="[d1]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xiangchajiao
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs84_to_gcj02
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformlng
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformlat
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[68]"></a>target_find</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, gps.o(i.target_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = target_find &rArr; Find_target &rArr; xiangchajiao &rArr; acos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5983_Read
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Way_Limite
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GREEN
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLUE
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_target
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[d6]"></a>transformlat</STRONG> (Thumb, 622 bytes, Stack size 104 bytes, gps.o(i.transformlat))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = transformlat &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs84_to_gcj02
</UL>

<P><STRONG><a name="[d7]"></a>transformlng</STRONG> (Thumb, 614 bytes, Stack size 96 bytes, gps.o(i.transformlng))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = transformlng &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wgs84_to_gcj02
</UL>

<P><STRONG><a name="[66]"></a>wgs84_to_gcj02</STRONG> (Thumb, 416 bytes, Stack size 112 bytes, gps.o(i.wgs84_to_gcj02))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = wgs84_to_gcj02 &rArr; transformlat &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformlng
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformlat
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[70]"></a>xiangchajiao</STRONG> (Thumb, 230 bytes, Stack size 120 bytes, vector.o(i.xiangchajiao))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = xiangchajiao &rArr; acos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_target
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a9]"></a>DELAY_xUs</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_mm32f327x.o(i.DELAY_xUs))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>

<P><STRONG><a name="[a7]"></a>SetSysClock</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_mm32f327x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[a8]"></a>SetSysClockToXX</STRONG> (Thumb, 506 bytes, Stack size 32 bytes, system_mm32f327x.o(i.SetSysClockToXX))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SetSysClockToXX &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_xUs
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[cb]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c0]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[cd]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[cc]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
